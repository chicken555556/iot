1 ELEVATOR PRO.

#include <lpc214x.h>
#define LED_OFF (IO0SET = 1U << 31)
#define LED_ON (IO0CLR = 1U << 31)
void delay_ms(unsigned int j);
void elevator_run(void);
int main() {
    IO0DIR |= (1U << 31) | (0xFF << 16); 
    IO1DIR |= (1U << 24);
    LED_ON;
    elevator_run();
    while (1);
}
void delay_ms(unsigned int j) {
    unsigned int x, i;
    for (i = 0; i < j; i++) {
        for (x = 0; x < 10000; x++); // Approximate delay
    }
}
void elevator_run(void) {
    int i, val;
    unsigned int counter;
    IO1CLR = 1U << 24; 
    IO0CLR = 0x000F0000;
    do {
        IO0CLR = 0x00F00000;
        IO0SET = 0x00F00000;
        do {
            counter = (IO1PIN >> 16) & 0x0000000F;
        } while (counter == 0x0F);
        if (counter == 0x0E) {
            val = 3;
        } else if (counter == 0x0D) {
            val = 6;
        } else if (counter == 0x0B) {
            val = 8;
        } else if (counter == 0x07) {
            val = 10;
        }
for (i = 0; i < val; i++) {
            IO0CLR = 0x000F0000;
            IO0SET = i << 16;
            delay_ms(100);
        }
        for (i = 0; i < val; i++) {
            IO0CLR = 0x000F0000;
            IO0SET = i << 16;
            delay_ms(100);
        }
    } while (1);
}








2 SEVEN SEGMENT DISPLAY

#include <lpc214x.h>
#define LED_OFF (IO0SET = 1U << 31)
#define LED_ON (IO0CLR = 1U << 31)
#define PLOCK 0x00000400
void delay_ms(unsigned int j);

unsigned char getAlphaCode(unsigned char alphachar);
void alphadisp7SEG(char *buf);
int main()
{
 IO0DIR |= 1U << 31 | 1U << 19 | 1U << 20 | 1U << 30 ;
 LED_ON; 
 
 while(1)
{
 alphadisp7SEG("fire");
 delay_ms(500);
 alphadisp7SEG("help");
 delay_ms(500);
}
}
unsigned char getAlphaCode(unsigned char alphachar)
{ 
switch (alphachar)
{
case 'f':return 0x8e; 
case 'i':return 0xf9;
case 'r':return 0xce;
case 'e':return 0x86; 
case 'h':return 0x89;
case 'l':return 0xc7;
case 'p':return 0x8c;
case ' ': return 0xff;
default : break;
}
return 0xff;
}
void alphadisp7SEG(char *buf)
{
unsigned char i,j;
unsigned char seg7_data,temp=0;
for(i=0;i<5;i++) 
 {
seg7_data = getAlphaCode(*(buf+i)); 
for (j=0 ; j<8; j++)
{
temp = seg7_data & 0x80;
if(temp == 0x80)
IOSET0 |= 1 << 19; 
else
IOCLR0 |= 1 << 19; 
IOSET0 |= 1 << 20; 
 delay_ms(1); 
IOCLR0 |= 1 << 20; 
 seg7_data = seg7_data << 1;
}
 }
IOSET0 |= 1 << 30; 
delay_ms(1); 
IOCLR0 |= 1 << 30; 
return;
 }
void delay_ms(unsigned int j)
{
 unsigned int x,i;
 for(i=0;i<j;i++)
 {
 for(x=0; x<10000; x++); 
 }
}







3 STEEPER MOTOR
#include <lpc214x.h>
#define LED_OFF (IO0SET = 1U << 31)
#define LED_ON (IO0CLR = 1U << 31)
#define PLOCK 0x00000400
void delay_ms(unsigned int j);
void SystemInit(void);
int main()
{
unsigned int no_of_steps_clk = 100, no_of_steps_aclk = 100;
IO0DIR |= 1U << 31 | 0x00FF0000 | 1U << 30; 
LED_ON; delay_ms(500);LED_OFF; 
do{
IO0CLR = 0X000F0000;IO0SET = 0X00010000;delay_ms(10);if(--no_of_steps_clk == 0) break;
IO0CLR = 0X000F0000;IO0SET = 0X00020000;delay_ms(10);if(--no_of_steps_clk == 0) break;
IO0CLR = 0X000F0000;IO0SET = 0X00040000;delay_ms(10);if(--no_of_steps_clk == 0) break;
IO0CLR = 0X000F0000;IO0SET = 0X00080000;delay_ms(10);if(--no_of_steps_clk == 0) break;
}while(1);
do{
IO0CLR = 0X000F0000;IO0SET = 0X00080000;delay_ms(10);if(--no_of_steps_aclk == 0) break;
IO0CLR = 0X000F0000;IO0SET = 0X00040000;delay_ms(10);if(--no_of_steps_aclk == 0) break;
IO0CLR = 0X000F0000;IO0SET = 0X00020000;delay_ms(10);if(--no_of_steps_aclk == 0) break;
IO0CLR = 0X000F0000;IO0SET = 0X00010000;delay_ms(10);if(--no_of_steps_aclk == 0) break;
}while(1);
IO0CLR = 0X00FF0000;
while(1);
}
void delay_ms(unsigned int j)
{
 unsigned int x,i;
 for(i=0;i<j;i++)
 {
 for(x=0; x<10000; x++); 
 }












4 DAC CODE
#include <lpc214x.h>
#include <stdio.h>
#define PLOCK 0x00000400
#define LED_OFF (IO0SET = 1U << 31)
#define LED_ON (IO0CLR = 1U << 31)
#define SW2 (IO0PIN & (1 << 14))
#define SW3 (IO0PIN & (1 << 15))
#define SW4 (IO1PIN & (1 << 18))
#define SW5 (IO1PIN & (1 << 19))
#define SW6 (IO1PIN & (1 << 20))
void SystemInit(void);
static void delay_ms(unsigned int j);
short int sine_table[ ] =
{512+0,512+53,512+106,512+158,512+208,512+256,512+300,512+342,512+380,512+413,
512+442,512+467,512+486,512+503,512+510,512+511, 
512+510,512+503,512+486,512+467,512+442,512+413,512+380,512+342,512+300,512+256,512+208,512+158,512+106,512+53,512+0,
512-53,512-106,512-158,512-208,512-256,512-300,512-342,512-380,512-413,512-442,512-
467,512-486,512-503,512-510,512-511,
512-510,512-503,512-486,512-467,512-442,512-413,512-380,512-342,512-300,512-
256,512-208,512-158,512-106,512-53};
short int sine_rect_table[ ] =
{512+0,512+53,512+106,512+158,512+208,512+256,512+300,512+342,512+380,512+413,
512+442,512+467,512+486,512+503,512+510,512+511,
512+510,512+503,512+486,512+467,512+442,512+413,512+380,512+342,512+300,512+256,512+208,512+158,512+106,512+53,512+0};
int main()
{
short int value,i=0;

PINSEL1 |= 0x00080000; 
IO0DIR |= 1U << 31 | 0x00FF0000 ; 
while(1)
{
 if (!SW2) 
 {
while (i!=60 )
 {
 value = sine_table[i++];
 DACR = ( (1<<16) | (value<<6) );
 delay_ms(1);
 }
 i=0;
 }
else if (!SW3)
 {
 while ( i!=30 )
 {
 value = sine_rect_table[i++];
 DACR = ( (1<<16) | (value<<6) );
 delay_ms(1);
 }
 i=0;
 }
 else if ( !SW4) 
 {
value = 0;
while ( value != 1023 )
 {
 DACR = ( (1<<16) | (value<<6) );
 value++;
 }
while ( value != 0 )
 {
 DACR = ( (1<<16) | (value<<6) );
 value--;
}
 }
else if ( !SW5 ) 
 {
value = 0;
 while ( value != 1023 )
 {
 DACR = ( (1<<16) | (value<<6) );
 value++;
 }
 }
else if ( !SW6 ) 
 {
value = 1023;
DACR = ( (1<<16) | (value<<6) );
delay_ms(1);
value = 0;
DACR = ( (1<<16) | (value<<6) );
delay_ms(1);
 }
else 
{
value = 1023;
DACR = ( (1<<16) | (value<<6) );
}
 }
}

void delay_ms(unsigned int j)
{
 unsigned int x,i;
 for(i=0;i<j;i++)
 {
 for(x=0; x<10000; x++); 
 }
}











5 KEY BORD 
#include <lpc214x.h>
#define LED_OFF (IO0SET = 1U << 31)
#define LED_ON (IO0CLR = 1U << 31)
#define COL0 (IO1PIN & 1 <<19)
#define COL1 (IO1PIN & 1 <<18)
#define COL2 (IO1PIN & 1 <<17)
#define COL3 (IO1PIN & 1 <<16)
void delay_ms(unsigned int j);
void uart_init(void);
unsigned char lookup_table[4][4]={ 
 {'0', '1', '2','3'},
 {'4', '5', '6','7'}, 
 {'8', '9', 'a','b'}, 
 {'c', 'd', 'e','f'}};
unsigned char rowsel=0,colsel=0;
int main( )
{
uart_init();
IO0DIR |= 1U << 31 | 0x00FF0000; 
LED_ON; delay_ms(500);LED_OFF;delay_ms(500);
do
 {
while(1)
 {
rowsel=0;IO0SET = 0X000F0000;IO0CLR = 1 << 16;
if(COL0==0){colsel=0;break;};if(COL1==0){colsel=1;break;};
if(COL2==0){colsel=2;break;};if(COL3==0){colsel=3;break;};
rowsel=1;IO0SET = 0X000F0000;IO0CLR = 1 << 17;
if(COL0==0){colsel=0;break;};if(COL1==0){colsel=1;break;};
if(COL2==0){colsel=2;break;};if(COL3==0){colsel=3;break;};
rowsel=2;IO0SET = 0X000F0000;IO0CLR = 1 << 18;
if(COL0==0){colsel=0;break;};if(COL1==0){colsel=1;break;};
if(COL2==0){colsel=2;break;};if(COL3==0){colsel=3;break;};
rowsel=3;IO0SET = 0X000F0000;IO0CLR = 1 << 19;
if(COL0==0){colsel=0;break;};if(COL1==0){colsel=1;break;};
if(COL2==0){colsel=2;break;};if(COL3==0){colsel=3;break;};
 };
delay_ms(50); 
while(COL0==0 || COL1==0 || COL2==0 || COL3==0);
delay_ms(50); 
IO0SET = 0X000F0000; 
U0THR = lookup_table[rowsel][colsel]; 
}
while(1);
}
void uart_init(void)
{
PINSEL0 |= 0x00000005; 
U0LCR = 0x83; 
U0DLM = 0; U0DLL = 8; U0LCR = 0x03; 
U0FCR = 0x07;
}
void delay_ms(unsigned int j)
{
 unsigned int x,i;
 for(i=0;i<j;i++)
 {
 for(x=0; x<10000; x++); 
 }
}

















6 DC MOTOR 
#include <lpc214x.h>
#define LED_OFF (IO0SET = 1U << 31)
#define LED_ON (IO0CLR = 1U << 31)
#define PLOCK 0x00000400
void delay_ms(unsigned int j);

void runDCMotor(int direction,int dutycycle);
unsigned int adc(int no,int ch);
int main()
{
int dig_val;
IO0DIR |= 1U << 31 | 0x00FF0000 | 1U << 30; 
LED_ON; delay_ms(500);LED_OFF; 

do{
dig_val = adc(1,2) / 10;
if(dig_val > 100) dig_val =100;
runDCMotor(2,dig_val); 
}
while(1);
}
void runDCMotor(int direction,int dutycycle)
{
 IO0DIR |= 1U << 28; 
 PINSEL0 |= 2 << 18; 
 if (direction == 1)
IO0SET = 1 << 28; 
else
 IO0CLR = 1 << 28; 
 PWMPCR = (1 << 14);
 PWMMR0 = 1000; 
 PWMMR6 = (1000U*dutycycle)/100; 
 PWMTCR = 0x00000009; 
 PWMLER = 0X70;
}
unsigned int adc(int no,int ch)
{
unsigned int val;
PINSEL0 |= 0x0F300000;
 switch (no) 
 {
 case 0: AD0CR=0x00200600|(1<<ch);
 AD0CR|=(1<<24);
 while((AD0GDR& (1U<<31))==0);
 val=AD0GDR;
 break;
 case 1: AD1CR=0x00200600|(1<<ch); 
 AD1CR|=(1<<24); 
 while((AD1GDR&(1U<<31))==0);
 val=AD1GDR;
 break;
 }
 val=(val >> 6) & 0x03FF;
 return val;
}
void delay_ms(unsigned int j)
{
 unsigned int x,i;
 for(i=0;i<j;i++)
 {
 for(x=0; x<10000; x++); 
 }
}
